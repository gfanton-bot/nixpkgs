name: Update flake inputs

on:
  workflow_dispatch:

env:
  CACHIX_USER: gfanton
  REF_BRANCH: master
  UPDATE_BRANCH: nix/flake-update-inputs

jobs:
  update-flake-inputs:
    name: Update Flake inputs
    runs-on: ubuntu-latest
    env:
      CONFIG_NAME: githubCI
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: ${{ env.REF_BRANCH }}

    - name: restet update branch
      run: |
        git switch $UPDATE_BRANCH 2>/dev/null || git switch -c $UPDATE_BRANCH
        git reset --hard $REF_BRANCH

    - name: Install Nix
      uses: cachix/install-nix-action@v21
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: ${{ env.CACHIX_USER }}
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

    - name: Build and switch to home-manager env
      id: flakes-update
      run: |
        # Prevent conflict between Cachix installed by workflow and the one installed in the config
        nix-env --set-flag priority 1 cachix

        # Build and switch to home-manager env
        nix build ".#homeConfigurations.$CONFIG_NAME.activationPackage"
        ./result/activate switch --verbose
        nixos_old_gen=$(readlink -f $HOME/.nix-profile) || true
        echo "current generation: $nixos_old_gen"

        # update flake
        nix flake update

        # update all inputs by recreating the flake
        nix build ".#homeConfigurations.$CONFIG_NAME.activationPackage"
        ./result/activate switch --verbose
        nixos_new_gen=$(readlink -f $HOME/.nix-profile)
        echo "new generation: $nixos_new_gen"

        # generate diff
        touch CHANGELOG.md
        nix-shell -p nvd --run "nvd diff $nixos_old_gen $nixos_new_gen" | tail -n +3 > /tmp/new.report.md
        cat <<EOT >> CHANGELOG.md
        ## Update $(date +%F)
        $(cat /tmp/new.report.md)

        $(cat CHANGELOG.md)
        EOT

        echo "inputs-date=$(date +%F)" >> "$GITHUB_OUTPUT"
        echo "::set-output name=inputs-change::$(cat /tmp/new.report.md)"

        cat report.txt

    - name: Create commits
      run: |
        git config user.name 'github-action'
        git config user.email 'github-action@users.noreply.github.com'
        git add flake.lock
        git add report.txt
        git status

        git commit -m "Update $(date +%F)"

        # override branch
        git push --force --set-upstream origin $UPDATE_BRANCH

    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v5
      with:
        title: "${{ steps.flakes-update.outputs.inputs-date }} inputs update"
        body: |
          ## Changelogs

          ${{ steps.flakes-update.outputs.inputs-change }}

    - name: Check outputs
      if: ${{ steps.cpr.outputs.pull-request-number }}
      run: |
        echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
        echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
